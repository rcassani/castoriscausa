

Modified / adapted from:
https://ubuntuforums.org/showthread.php?t=2338836

## Current Setup
Laptop, UEFI, Win10
Desktop, clean HHD, set with UEFI boot

# Goal
Have a USB booting Linux mint in UEFI in the Laptop

# Requirements
A Live CD or Live USB, persistence is not required, Live-Linux
A Linux installation on HHD booting in UEFI, HDD-Linux
A Target USB  Target-USB

It's a must to have a system with Linux up and ready

# Steps
1. Install Linux in a HDD, with the Live CD or the Live-Linux USB
I used to [Lili](link) to create a Live-Linux USB using the ISO file, this
Live-Linux USB to install Linux in a HDD

If you have a this you can me a large jump to step X

2. Boot either in HDD-Linux or Live-Linux, to create the partions for the Target-USB
This uses [GParted](Link)

I had to install Gparted

```
  sudo apt-get update
  sudo apt-get install gparted
```

1. Open Gparted, (having GParted open will prevent the OS of mounting the USB)
2. Plug in the Target-USB
3. Select your Target Device
4. Device / Create Partition Table ...
5. Select Type ```gpt``` This will erase your data
6. Partition / New  Partition X preceding, 300MiB, Primary Partition, fat32
7. Partition / New  Partition [] preceding, 1000 MiB,  0 Free Space following, Primary Partition, linux-swap
8. Partition / New  in the middle space, prmary, ext4
8. Partition / New  in the 1st space, primary, NTFS
9. Edit / Apply All Operation
10. change the flags for the 300MiB partition, right click on it, manage flags, set ```boot``` and ```esp``` (EFI system partition)
11. Quit GParted
12. At this point you can test that the NTFS partition is accessible in Windows

13. Boot the system with the Live-Linux USB
14. Plug in your target-usb drive and find out its /dev name (you can use GParted for this)
15. unmont it (eject it)
15. Click the button for installing the OS on your PC.
16. Select the language etc. Decide about installation options.
17. No install third-party software !! If it's going to be portable
18. Select Something else
19. Select your /dev/sdx1 (the EFI partition: FAT32 300 MB; in case it is given another number, just act on that partition)
    and press "change";
    use it as ```efi partition``` -- regrettably, the installer will still install on sda1
20. Select your /dev/sdx2, press change, use it as ``Ext4 journaling file system``` partition; mount point at "/"
    Check for Format
22. Select your /dev/sdx3, press change, use it as ```swap area```
23. Go on with the installation.
21. Be sure the disk that disks and partitions are correct
22. At the end, choose to close the window but to keep using the live CD.
23. Unmount and unplug the target-USB

Boot needs to be repair, in the same Live-Linux install boot-repair

```
sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt-get update
sudo apt-get install -y boot-repair && boot-repair
```
Restore your main system*
(1) Unmount any mounted partitions on your target drive, unplug it.
(2) Run boot-repair and follow its directions -- you might check, in advanced options, that it is setting your grub to boot to the correct partition in your internal HDD. As an alternative, restore your EFI partition and boot configuration in any other way you have previously chosen when you have backed up. boot-repair always worked for me and I can see no reasons why it shouldn't.
(3) Shutdown. Remove the live usb drive.
Boot to your main system (the one installed on the internal HDD).
Apply and shutdown

Your HDD Linux should be able to boot normally

*D: Tweak the usb flash drive*
(1) You are now in your working main system. Plug in the target drive with the Ubuntu installation.
Find out its partition names /dev/sdxy.
Find out the UUIDs of sdx1 (EFI) sdx2 (root) and sdx3 (swap) with gparted
(right click on partition and select "information") or
 "sudo blkid /dev/sdxy" and write them down.
(2) The root partition of your target drive should have been
automatically mounted when you have plugged in the flash drive.
Mount the EFI partition of the target drive

```
sudo mkdir /mnt/efi
sudo mount /dev/sdx1 /mnt/efi
```

(3) keeping the UUID of sdx1 (EFI) and sdx2 (partition root in target drive)
in a sheet of paper or in the clipboard. And produce the crucial text file grub.cfg
("CGC" hereafter) opening your text editor as root
(e.g. sudo leafpad for a Lubuntu user, sudo gedit, etc.).
You should produce a text file containing exactly the following three lines,
but you have to replace the expression
between "<>" with the UUID of your EFI partition in your target drive:

```
search.fs_uuid <YOUR EFI UUID in target flash drive> root hd1,gpt2
set prefix=($root)'/boot/grub'
configfile $prefix/grub.cfg
```


3.
